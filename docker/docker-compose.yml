version: "3"
services:
  mysql:
    image: mysql:latest
    container_name: mysql
    volumes:
      - ./etc/mysql/my.cnf:/etc/my.cnf
      - ./volume/mysql:/tmp/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    ports:
      - 3308:3306
    networks:
      my-networks:
        ipv4_address: "172.18.0.2"
  redis:
    image: redis
    container_name: redis
    command: redis-server /etc/redis/redis.conf --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - ./etc/redis/redis.conf:/etc/redis/redis.conf
      - ./volume/redis:/data
    networks:
      my-networks:
        ipv4_address: "172.18.0.3"

  kong-database:
      image: postgres:9.6
      container_name: kong-database
      ports:
        - 5432:5432
      environment:
        - POSTGRES_USER=kong
        - POSTGRES_DB=kong
        - POSTGRES_PASSWORD=kong
      networks:
        my-networks:
          ipv4_address: "172.18.0.8"

  kong-migrations:
    image: kong:latest
    container_name: kong-migrations
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PG_HOST=kong-database
    command: kong migrations bootstrap
    restart: on-failure
    networks:
      my-networks:
        ipv4_address: "172.18.0.9"
    depends_on:
      - kong-database

  kong:
    image: kong:latest
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
#      - KONG_DNS_RESOLVER=172.18.0.7:8600
    restart: on-failure
    ports:
      - 8000:8000
      - 443:8443
      - 8001:8001
      - 8444:8444
    volumes:
      - ./etc/kong/kong.conf:/etc/kong/kong.conf
    links:
      - kong-database:kong-database
    networks:
      my-networks:
        ipv4_address: "172.18.0.10"
    depends_on:
      - kong-database
      - kong-migrations

  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_DATABASE: konga
      DB_PASSWORD: kong #必须加上密码，不然会失败
    depends_on:
      - kong
      - kong-database
    restart: always
    networks:
      my-networks:
        ipv4_address: "172.18.0.11"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      my-networks:
        ipv4_address: "172.18.0.12"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kibana
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
    ports:
      - 5601:5601
    networks:
      my-networks:
        ipv4_address: "172.18.0.13"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    environment:
      - "WAIT_HOSTS=elasticsearch:9200"
      - "SPAN_STORAGE_TYPE=elasticsearch"
      - "COLLECTOR_ZIPKIN_HOST_PORT=:9411"
      - "ES_SERVER_URLS=http://elasticsearch:9200"
      - "ES_TAGS_AS_FIELDS_ALL=true"
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      my-networks:
        ipv4_address: "172.18.0.14"
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch
    restart: always
  rabbitmq:
      image: rabbitmq:3.8.3-management
      container_name: rabbitmq
      restart: always
      hostname: myRabbitmq
      ports:
        - 15672:15672
        - 5672:5672
#      volumes:
#        - ./volume/rabbitmq:/var/lib/rabbitmq
      environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASS=guest
      networks:
          my-networks:
            ipv4_address: "172.18.0.15"
networks:
  my-networks:
#    external: false
    ipam:
      driver: default
      config:
        - subnet: "172.18.0.0/24"